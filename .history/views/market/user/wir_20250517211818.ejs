<%- include('../../partials/header', { title: 'WIR Balance - Vivid Market' }) %>
<link rel="stylesheet" href="/css/transaction-styles.css">

<div class="vivid-market theme-purple">
  <!-- Breadcrumb Navigation -->
  <div class="breadcrumb">
    <a href="/">Home</a> &gt;
    <a href="/market">Vivid Market</a> &gt;
    <span>WIR Balance</span>
  </div>

  <!-- Market Theme Selector -->
  <div class="market-theme-selector">
    <label for="theme-select">Market Theme:</label>
    <select id="theme-select" class="theme-select">
      <option value="purple">Neon Purple</option>
      <option value="blue">Cyber Blue</option>
      <option value="red">Digital Red</option>
      <option value="green">Matrix Green</option>
      <option value="grayscale">Monochrome</option>
    </select>
  </div>

  <!-- User Market Navigation -->
  <div style="display: flex; gap: 10px; margin-bottom: 20px;">
    <a href="/market/user/selling" class="action-button">
      <i class="button-icon fa fa-tags"></i>
      <span class="button-text">My Items</span>
    </a>
    <a href="/market/user/purchased" class="action-button">
      <i class="button-icon fa fa-shopping-cart"></i>
      <span class="button-text">Purchases</span>
    </a>
    <a href="/market/user/wishlist" class="action-button">
      <i class="button-icon fa fa-heart"></i>
      <span class="button-text">Wishlist</span>
    </a>
    <a href="/market/user/collections" class="action-button">
      <i class="button-icon fa fa-layer-group"></i>
      <span class="button-text">Collections</span>
    </a>
    <a href="/market/user/wir" class="action-button active">
      <i class="button-icon fa fa-coins"></i>
      <span class="button-text">WIR Balance</span>
    </a>
  </div>

  <!-- WIR Balance Section -->
  <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 30px;">
    <!-- Balance Card -->
    <div class="balance-card">
      <div class="balance-header">
        <h2>Your WIR Balance</h2>
        <div class="balance-icon">
          <i class="fa fa-coins"></i>
        </div>
      </div>

      <div class="balance-amount">
        <div class="amount-value"><%= user.wirBalance %> <span class="currency">WIR</span></div>
        <div class="amount-description">Available for purchases and transfers</div>
      </div>

      <div class="transaction-stats">
        <div class="stat-item">
          <div class="stat-label">30-Day Activity</div>
          <div class="stat-value">
            <i class="fa fa-arrow-up" style="color: var(--success-color);"></i> +<%= Math.floor(Math.random() * 500) %> WIR
            <i class="fa fa-arrow-down" style="color: var(--error-color);"></i> -<%= Math.floor(Math.random() * 300) %> WIR
          </div>
        </div>
      </div>

      <div class="balance-actions">
        <button id="transfer-wir-btn" class="action-button">
          <i class="button-icon fa fa-exchange-alt"></i>
          <span class="button-text">Transfer WIR</span>
        </button>

        <button id="convert-wir-btn" class="action-button">
          <i class="button-icon fa fa-sync"></i>
          <span class="button-text">Convert Currency</span>
        </button>
      </div>
    </div>

    <!-- WIR Info Card -->
    <div class="info-card">
      <div class="info-header">
        <h2>About WIR</h2>
        <div class="info-icon">
          <i class="fa fa-info-circle"></i>
        </div>
      </div>

      <div class="info-content">
        <p class="info-description">
          <strong>WIR (Wirebase Internal Resource)</strong> is the digital currency used in the Vivid Market.
        </p>

        <div class="feature-list">
          <div class="feature-item">
            <div class="feature-icon">üõí</div>
            <div class="feature-text">Purchase digital assets in the marketplace</div>
          </div>
          <div class="feature-item">
            <div class="feature-icon">üí∞</div>
            <div class="feature-text">Sell your creations to earn WIR</div>
          </div>
          <div class="feature-item">
            <div class="feature-icon">‚ÜîÔ∏è</div>
            <div class="feature-text">Transfer WIR to other users</div>
          </div>
          <div class="feature-item">
            <div class="feature-icon">üîÑ</div>
            <div class="feature-text">Convert between WIR and Loot Tokens</div>
          </div>
        </div>

        <div class="info-note">
          <i class="fa fa-lightbulb"></i>
          <span>New users receive 100 WIR to start exploring the marketplace.</span>
        </div>
      </div>
    </div>
  </div>

  <!-- Transaction History Section -->
  <div class="section-header">
    <div class="section-divider"></div>
    <h2>Transaction History</h2>
  </div>

  <% if (transactions && transactions.length > 0) { %>
    <div class="transaction-filter-container">
      <select id="transaction-filter" class="transaction-filter">
        <option value="all">All Transactions</option>
        <option value="purchase">Purchases</option>
        <option value="sale">Sales</option>
        <option value="transfer">Transfers</option>
        <option value="conversion">Conversions</option>
        <option value="listing_fee">Listing Fees</option>
      </select>
    </div>

    <div class="transaction-list">
      <% transactions.forEach(transaction => { %>
        <div class="transaction-item type-<%= transaction.transactionType %>">
          <div class="transaction-icon">
            <% if (transaction.transactionType === 'purchase') { %>
              üõí
            <% } else if (transaction.transactionType === 'sale') { %>
              üíµ
            <% } else if (transaction.transactionType === 'transfer') { %>
              <% if (transaction.direction === 'outgoing') { %>
                ‚ÜóÔ∏è
              <% } else { %>
                ‚ÜòÔ∏è
              <% } %>
            <% } else if (transaction.transactionType === 'loot_to_wir_conversion' || transaction.transactionType === 'wir_to_loot_conversion') { %>
              üîÑ
            <% } else if (transaction.transactionType === 'listing_fee') { %>
              üìã
            <% } else { %>
              üí±
            <% } %>
          </div>

          <div class="transaction-details">
            <div class="transaction-title">
              <% if (transaction.transactionType === 'purchase') { %>
                <span class="transaction-type-badge purchase">Purchase</span> Purchased item
              <% } else if (transaction.transactionType === 'sale') { %>
                <span class="transaction-type-badge sale">Sale</span> Sold item
              <% } else if (transaction.transactionType === 'transfer') { %>
                <% if (transaction.direction === 'outgoing') { %>
                  <span class="transaction-type-badge transfer-out">Transfer Out</span> Sent WIR to
                  <span class="user-reference"><%= transaction.receiver ? transaction.receiver.displayName : 'User' %></span>
                <% } else { %>
                  <span class="transaction-type-badge transfer-in">Transfer In</span> Received WIR from
                  <span class="user-reference"><%= transaction.sender ? transaction.sender.displayName : 'User' %></span>
                <% } %>
              <% } else if (transaction.transactionType === 'loot_to_wir_conversion') { %>
                <span class="transaction-type-badge conversion">Conversion</span> Converted Loot to WIR
              <% } else if (transaction.transactionType === 'wir_to_loot_conversion') { %>
                <span class="transaction-type-badge conversion">Conversion</span> Converted WIR to Loot
              <% } else if (transaction.transactionType === 'listing_fee') { %>
                <span class="transaction-type-badge fee">Fee</span> Listing fee
              <% } else { %>
                <span class="transaction-type-badge"><%= transaction.transactionType %></span>
              <% } %>
            </div>

            <% if (transaction.item) { %>
              <div class="transaction-item-name">
                <a href="/market/item/<%= transaction.item.id %>"><%= transaction.item.title %></a>
              </div>
            <% } %>

            <% if (transaction.notes) { %>
              <div class="transaction-notes"><%= transaction.notes %></div>
            <% } %>

            <div class="transaction-date"><%= new Date(transaction.createdAt).toLocaleDateString() %> <%= new Date(transaction.createdAt).toLocaleTimeString() %></div>
          </div>

          <div class="transaction-amount <%= transaction.direction %>">
            <% if (transaction.direction === 'outgoing') { %>
              -<%= transaction.amount %> WIR
            <% } else { %>
              +<%= transaction.amount %> WIR
            <% } %>
          </div>
        </div>
      <% }); %>
    </div>
  <% } else { %>
    <div class="empty-state">
      <div class="empty-state-icon">üìä</div>
      <h3 class="empty-state-title">No Transactions Yet</h3>
      <p class="empty-state-message">Your transaction history will appear here once you start using WIR.</p>
    </div>
  <% } %>

  <!-- Transfer WIR Modal -->
  <div id="transfer-wir-modal" class="modal">
    <div class="modal-content">
      <span class="close-modal">&times;</span>
      <h2>Transfer WIR</h2>
      <form id="transfer-wir-form">
        <div class="form-group">
          <label for="receiver-username">Recipient Username <span class="required">*</span></label>
          <input type="text" id="receiver-username" name="receiverUsername" required>
        </div>
        <div class="form-group">
          <label for="transfer-amount">Amount <span class="required">*</span></label>
          <input type="number" id="transfer-amount" name="amount" min="1" max="<%= user.wirBalance %>" required>
          <div class="form-hint">Available: <%= user.wirBalance %> WIR</div>
        </div>
        <div class="form-group">
          <label for="transfer-notes">Notes</label>
          <textarea id="transfer-notes" name="notes" rows="3"></textarea>
        </div>
        <div class="modal-actions">
          <button type="button" class="cancel-button close-modal">Cancel</button>
          <button type="submit" class="submit-button">Transfer WIR</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Convert Currency Modal -->
  <div id="convert-currency-modal" class="modal">
    <div class="modal-content">
      <span class="close-modal">&times;</span>
      <h2>Convert Currency</h2>
      <form id="convert-currency-form">
        <div class="form-group">
          <label for="conversion-direction">Conversion Direction <span class="required">*</span></label>
          <select id="conversion-direction" name="direction" required>
            <option value="loot_to_wir">Loot Tokens to WIR</option>
            <option value="wir_to_loot">WIR to Loot Tokens</option>
          </select>
        </div>
        <div class="form-group">
          <label for="conversion-amount">Amount <span class="required">*</span></label>
          <input type="number" id="conversion-amount" name="amount" min="1" required>
          <div class="form-hint" id="conversion-hint">
            Available: <%= user.lootTokens || 0 %> Loot Tokens
          </div>
        </div>
        <div class="form-group">
          <div id="conversion-rate-info" style="background-color: var(--bg-dark); padding: 10px; border-radius: 4px;">
            <p>Conversion Rate: 1 Loot Token = 5 WIR</p>
            <p>You will receive: <span id="conversion-result">0</span></p>
          </div>
        </div>
        <div class="modal-actions">
          <button type="button" class="cancel-button close-modal">Cancel</button>
          <button type="submit" class="submit-button">Convert Currency</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- Include the Vivid Market JavaScript -->
<script src="/js/vivid-market.js"></script>

<script>
  // Transaction filtering
  const transactionFilter = document.getElementById('transaction-filter');
  const transactionItems = document.querySelectorAll('.transaction-item');

  if (transactionFilter) {
    transactionFilter.addEventListener('change', function() {
      const type = this.value;

      if (type === 'all') {
        transactionItems.forEach(item => {
          item.style.display = 'flex';
        });
      } else if (type === 'conversion') {
        // Handle both conversion types
        transactionItems.forEach(item => {
          if (item.classList.contains('type-loot_to_wir_conversion') ||
              item.classList.contains('type-wir_to_loot_conversion')) {
            item.style.display = 'flex';
          } else {
            item.style.display = 'none';
          }
        });
      } else {
        transactionItems.forEach(item => {
          if (item.classList.contains(`type-${type}`)) {
            item.style.display = 'flex';
          } else {
            item.style.display = 'none';
          }
        });
      }
    });
  }
  document.addEventListener('DOMContentLoaded', function() {
    // Transfer WIR Modal
    const transferBtn = document.getElementById('transfer-wir-btn');
    const transferModal = document.getElementById('transfer-wir-modal');
    const transferForm = document.getElementById('transfer-wir-form');

    transferBtn.addEventListener('click', function() {
      transferModal.style.display = 'block';
    });

    transferForm.addEventListener('submit', async function(e) {
      e.preventDefault();

      const formData = new FormData(transferForm);
      const data = {
        receiverUsername: formData.get('receiverUsername'),
        amount: parseInt(formData.get('amount')),
        notes: formData.get('notes')
      };

      try {
        const response = await fetch('/market/user/wir/transfer', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();

        if (result.success) {
          showNotification('Transfer successful', 'success');
          setTimeout(() => {
            window.location.reload();
          }, 1500);
        } else {
          showNotification(result.message || 'Transfer failed', 'error');
        }
      } catch (error) {
        console.error('Error transferring WIR:', error);
        showNotification('Error transferring WIR', 'error');
      }
    });

    // Convert Currency Modal
    const convertBtn = document.getElementById('convert-wir-btn');
    const convertModal = document.getElementById('convert-currency-modal');
    const convertForm = document.getElementById('convert-currency-form');
    const conversionDirection = document.getElementById('conversion-direction');
    const conversionAmount = document.getElementById('conversion-amount');
    const conversionHint = document.getElementById('conversion-hint');
    const conversionResult = document.getElementById('conversion-result');

    convertBtn.addEventListener('click', function() {
      convertModal.style.display = 'block';
    });

    // Update available balance and conversion result when direction changes
    conversionDirection.addEventListener('change', function() {
      updateConversionInfo();
    });

    // Update conversion result when amount changes
    conversionAmount.addEventListener('input', function() {
      updateConversionResult();
    });

    function updateConversionInfo() {
      const direction = conversionDirection.value;
      const wirBalance = <%= user.wirBalance %>;
      const lootBalance = <%= user.lootTokens || 0 %>;

      if (direction === 'loot_to_wir') {
        conversionHint.textContent = `Available: ${lootBalance} Loot Tokens`;
        conversionAmount.max = lootBalance;
      } else {
        conversionHint.textContent = `Available: ${wirBalance} WIR`;
        conversionAmount.max = wirBalance;
      }

      updateConversionResult();
    }

    function updateConversionResult() {
      const direction = conversionDirection.value;
      const amount = parseInt(conversionAmount.value) || 0;

      if (direction === 'loot_to_wir') {
        // 1 Loot Token = 5 WIR
        conversionResult.textContent = `${amount * 5} WIR`;
      } else {
        // 5 WIR = 1 Loot Token
        conversionResult.textContent = `${Math.floor(amount / 5)} Loot Tokens`;
      }
    }

    convertForm.addEventListener('submit', async function(e) {
      e.preventDefault();

      const formData = new FormData(convertForm);
      const data = {
        direction: formData.get('direction'),
        amount: parseInt(formData.get('amount'))
      };

      try {
        const response = await fetch('/market/user/wir/convert', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();

        if (result.success) {
          showNotification('Conversion successful', 'success');
          setTimeout(() => {
            window.location.reload();
          }, 1500);
        } else {
          showNotification(result.message || 'Conversion failed', 'error');
        }
      } catch (error) {
        console.error('Error converting currency:', error);
        showNotification('Error converting currency', 'error');
      }
    });

    // Initialize conversion info
    updateConversionInfo();
  });
</script>

<%- include('../../partials/footer') %>
