{{!< layouts/main}}

<div class="forum-container">
  <!-- Sidebar Navigation -->
  <div class="forum-sidebar">
    <div class="forum-sidebar-item">
      <a href="/forum" class="forum-sidebar-link">
        <i class="fas fa-home"></i>
      </a>
      <span class="forum-sidebar-text">Forum Home</span>
    </div>
    <div class="forum-sidebar-item">
      <a href="/forum/category/general" class="forum-sidebar-link {{#if (eq category 'general')}}active{{/if}}">
        <i class="fas fa-comments"></i>
      </a>
      <span class="forum-sidebar-text">General</span>
    </div>
    <div class="forum-sidebar-item">
      <a href="/forum/category/tech" class="forum-sidebar-link {{#if (eq category 'tech')}}active{{/if}}">
        <i class="fas fa-code"></i>
      </a>
      <span class="forum-sidebar-text">Tech</span>
    </div>
    <div class="forum-sidebar-item">
      <a href="/forum/category/creative" class="forum-sidebar-link {{#if (eq category 'creative')}}active{{/if}}">
        <i class="fas fa-palette"></i>
      </a>
      <span class="forum-sidebar-text">Creative</span>
    </div>
    <div class="forum-sidebar-item">
      <a href="/forum/category/meta" class="forum-sidebar-link {{#if (eq category 'meta')}}active{{/if}}">
        <i class="fas fa-cog"></i>
      </a>
      <span class="forum-sidebar-text">Meta</span>
    </div>
    {{#if isAuthenticated}}
    <div class="forum-sidebar-item">
      <a href="/forum/new" class="forum-sidebar-link">
        <i class="fas fa-plus"></i>
      </a>
      <span class="forum-sidebar-text">New Thread</span>
    </div>
    {{/if}}
  </div>

  <div class="forum-header">
    <h1 class="cyber-header glitch-text" data-text="{{category}}">{{category}}</h1>
    <p class="forum-description">Discussions in the {{category}} category <span class="terminal-cursor"></span></p>

    <!-- Improved Breadcrumbs -->
    <div class="breadcrumbs">
      <a href="/forum">Assembly</a>
      <span class="separator">Â»</span>
      <span>{{category}}</span>
    </div>
  </div>

  <div class="forum-actions">
    {{#if isAuthenticated}}
      <a href="/forum/new?category={{category}}" class="cyber-button">Create New Thread</a>
    {{else}}
      <a href="/users/login" class="cyber-button">Login to Post</a>
    {{/if}}
  </div>

  <div class="threads-container cyber-window">
    <div class="cyber-window-header">
      <span class="cyber-window-title">Threads</span>
      <div class="thread-sort-controls">
        <label for="thread-sort">Sort by:</label>
        <select id="thread-sort" class="cyber-select">
          <option value="newest">Newest</option>
          <option value="oldest">Oldest</option>
          <option value="replies">Most Replies</option>
          <option value="activity">Recent Activity</option>
        </select>
      </div>
    </div>
    <div class="cyber-window-content">
      <div class="thread-list">
        {{#if threads.length}}
          {{#each threads}}
            <div class="thread-item {{#if isPinned}}pinned{{/if}}">
              {{#if isPinned}}
                <div class="pin-indicator" title="Pinned Thread">ðŸ“Œ</div>
              {{/if}}
              <div class="thread-title">
                <a href="/forum/thread/{{id}}">{{title}}</a>
              </div>
              <div class="thread-meta">
                <span class="thread-author">{{creator.username}}</span>
                <span class="thread-date">{{formatDate createdAt 'relative'}}</span>
                <span class="thread-replies">{{replyCount}} {{#if (eq replyCount 1)}}reply{{else}}replies{{/if}}</span>
              </div>
              {{#if tags.length}}
                <div class="thread-tags">
                  {{#each tags}}
                    <span class="thread-tag">{{this}}</span>
                  {{/each}}
                </div>
              {{/if}}
            </div>
          {{/each}}
        {{else}}
          <div class="no-threads">
            <p>No threads found. Be the first to create a thread!</p>
          </div>
        {{/if}}
      </div>

      <!-- Pagination -->
      <div class="pagination">
        <a href="?page=1" class="cyber-button pagination-button {{#unless pagination.hasPrev}}disabled{{/unless}}">First</a>
        <a href="?page={{pagination.prevPage}}" class="cyber-button pagination-button {{#unless pagination.hasPrev}}disabled{{/unless}}">Previous</a>

        <div class="pagination-info">Page {{pagination.currentPage}} of {{pagination.totalPages}}</div>

        <a href="?page={{pagination.nextPage}}" class="cyber-button pagination-button {{#unless pagination.hasNext}}disabled{{/unless}}">Next</a>
        <a href="?page={{pagination.totalPages}}" class="cyber-button pagination-button {{#unless pagination.hasNext}}disabled{{/unless}}">Last</a>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize glitch effect on headers
    const headers = document.querySelectorAll('.glitch-text');
    headers.forEach(header => {
      const text = header.textContent;
      header.setAttribute('data-text', text);
    });

    // Thread sorting functionality
    const threadSortSelect = document.getElementById('thread-sort');
    const threadList = document.querySelector('.thread-list');
    const threadItems = Array.from(document.querySelectorAll('.thread-item'));

    if (threadSortSelect && threadList) {
      threadSortSelect.addEventListener('change', function() {
        const sortBy = this.value;

        // Clone the thread items for sorting
        const sortedItems = [...threadItems];

        // Sort the items based on the selected option
        switch(sortBy) {
          case 'newest':
            sortedItems.sort((a, b) => {
              const dateA = a.querySelector('.thread-date').textContent;
              const dateB = b.querySelector('.thread-date').textContent;
              // Simple comparison for demo purposes
              // In a real app, you'd parse actual dates
              return dateA.localeCompare(dateB);
            });
            break;

          case 'oldest':
            sortedItems.sort((a, b) => {
              const dateA = a.querySelector('.thread-date').textContent;
              const dateB = b.querySelector('.thread-date').textContent;
              return dateB.localeCompare(dateA);
            });
            break;

          case 'replies':
            sortedItems.sort((a, b) => {
              const repliesA = parseInt(a.querySelector('.thread-replies').textContent);
              const repliesB = parseInt(b.querySelector('.thread-replies').textContent);
              return repliesB - repliesA; // Most replies first
            });
            break;

          case 'activity':
            // For demo purposes, we'll just use a random sort
            sortedItems.sort(() => Math.random() - 0.5);
            break;
        }

        // Move pinned threads to the top regardless of sort
        const pinnedItems = sortedItems.filter(item => item.classList.contains('pinned'));
        const regularItems = sortedItems.filter(item => !item.classList.contains('pinned'));
        const finalSortedItems = [...pinnedItems, ...regularItems];

        // Clear the thread list
        threadList.innerHTML = '';

        // Append the sorted items
        finalSortedItems.forEach(item => {
          threadList.appendChild(item);
        });
      });
    }

  });
</script>
