<div class="vivid-market collection-detail-page">
  <div class="breadcrumb">
    <a href="/market">Vivid Market</a> &gt; 
    <a href="/market/collections">Collections</a> &gt; 
    <span>{{collection.name}}</span>
  </div>

  <div class="collection-header">
    <div class="collection-cover">
      <img src="{{collection.coverImage}}" alt="{{collection.name}}">
      {{#unless collection.isPublic}}
        <div class="collection-privacy">Private</div>
      {{/unless}}
    </div>
    
    <div class="collection-info">
      <h1 class="collection-title">{{collection.name}}</h1>
      
      <div class="collection-meta">
        <div class="collection-creator">
          <a href="/profile/{{collection.creator.username}}" class="creator-link">
            <img src="{{collection.creator.avatar}}" alt="{{collection.creator.username}}" class="creator-avatar">
            <span class="creator-name">{{collection.creator.displayName}}</span>
          </a>
        </div>
        
        <div class="collection-stats">
          <div class="stat">
            <span class="stat-icon">üì¶</span>
            <span class="stat-value">{{collection.items.length}} items</span>
          </div>
          <div class="stat">
            <span class="stat-icon">üëÅÔ∏è</span>
            <span class="stat-value">{{collection.views}} views</span>
          </div>
          <div class="stat">
            <span class="stat-icon">üìÖ</span>
            <span class="stat-value">Created {{formatDate collection.createdAt}}</span>
          </div>
        </div>
      </div>
      
      <div class="collection-description">
        {{#if collection.description}}
          {{collection.description}}
        {{else}}
          <em>No description provided</em>
        {{/if}}
      </div>
      
      <div class="collection-actions">
        {{#if isOwner}}
          <button id="edit-collection-button" class="action-button edit-button">Edit Collection</button>
          <button id="add-items-button" class="action-button add-button">Add Items</button>
        {{else}}
          <button id="follow-collection-button" class="action-button follow-button {{#if isFollowing}}following{{/if}}">
            {{#if isFollowing}}
              Following
            {{else}}
              Follow Collection
            {{/if}}
          </button>
        {{/if}}
        <button id="share-collection-button" class="action-button share-button">Share</button>
      </div>
    </div>
  </div>
  
  <div class="collection-content">
    <div class="content-header">
      <div class="view-options">
        <button class="view-option active" data-view="grid">
          <span class="view-icon">‚ñ¶</span>
          <span class="view-text">Grid</span>
        </button>
        <button class="view-option" data-view="list">
          <span class="view-icon">‚ò∞</span>
          <span class="view-text">List</span>
        </button>
        <button class="view-option" data-view="desktop">
          <span class="view-icon">üñ•Ô∏è</span>
          <span class="view-text">Desktop</span>
        </button>
      </div>
      
      <div class="filter-options">
        <select id="sort-filter" class="sort-filter">
          <option value="custom">Custom Order</option>
          <option value="newest">Newest First</option>
          <option value="oldest">Oldest First</option>
          <option value="price_low">Price: Low to High</option>
          <option value="price_high">Price: High to Low</option>
        </select>
        
        <input type="text" id="search-input" class="search-input" placeholder="Search in collection...">
      </div>
    </div>
    
    {{#if collection.items.length}}
      <div class="items-container grid-view">
        {{#each collection.items}}
          <div class="collection-item" data-price="{{this.wirPrice}}" data-date="{{this.addedAt}}" data-title="{{this.title}}" data-category="{{this.categoryName}}">
            <div class="item-preview">
              <a href="/market/item/{{this.id}}">
                <img src="{{this.previewImage}}" alt="{{this.title}}">
              </a>
              <div class="item-category">{{this.categoryName}}</div>
              {{#if ../isOwner}}
                <button class="remove-item-button" data-item-id="{{this.id}}">√ó</button>
              {{/if}}
            </div>
            <div class="item-details">
              <h3><a href="/market/item/{{this.id}}">{{this.title}}</a></h3>
              <div class="item-creator">
                <a href="/profile/{{this.creator.username}}">
                  <img src="{{this.creator.avatar}}" alt="{{this.creator.username}}" class="creator-avatar">
                  <span>{{this.creator.displayName}}</span>
                </a>
              </div>
              <div class="item-price">
                <span class="wir-price">{{this.wirPrice}} WIR</span>
              </div>
            </div>
          </div>
        {{/each}}
      </div>
    {{else}}
      <div class="empty-collection">
        <div class="empty-icon">üìÇ</div>
        <h2>This collection is empty</h2>
        {{#if isOwner}}
          <p>Add items to your collection to display them here.</p>
          <button id="empty-add-items-button" class="action-button add-button">Add Items</button>
        {{else}}
          <p>The creator hasn't added any items to this collection yet.</p>
        {{/if}}
      </div>
    {{/if}}
  </div>
</div>

<style>
  /* Collection Detail Page Styles */
  .collection-detail-page {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }
  
  /* Collection Header */
  .collection-header {
    display: grid;
    grid-template-columns: 300px 1fr;
    gap: 30px;
    margin-bottom: 30px;
  }
  
  @media (max-width: 768px) {
    .collection-header {
      grid-template-columns: 1fr;
    }
  }
  
  .collection-cover {
    position: relative;
    height: 300px;
    overflow: hidden;
    border: 1px solid var(--border-color);
  }
  
  .collection-cover img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  
  .collection-privacy {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: rgba(0, 0, 0, 0.7);
    color: #fff;
    padding: 5px 10px;
    font-size: 0.8rem;
  }
  
  .collection-info {
    display: flex;
    flex-direction: column;
  }
  
  .collection-title {
    font-size: 2rem;
    margin: 0 0 15px 0;
    color: var(--secondary-color);
  }
  
  .collection-meta {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
  }
  
  .collection-creator {
    display: flex;
    align-items: center;
  }
  
  .creator-link {
    display: flex;
    align-items: center;
    color: var(--text-muted);
    text-decoration: none;
  }
  
  .creator-avatar {
    width: 30px;
    height: 30px;
    border-radius: 50%;
    margin-right: 10px;
    object-fit: cover;
  }
  
  .collection-stats {
    display: flex;
    gap: 15px;
  }
  
  .stat {
    display: flex;
    align-items: center;
    gap: 5px;
    color: var(--text-muted);
    font-size: 0.9rem;
  }
  
  .collection-description {
    margin-bottom: 20px;
    line-height: 1.5;
    color: var(--text-light);
  }
  
  .collection-actions {
    display: flex;
    gap: 10px;
    margin-top: auto;
  }
  
  /* Content Header */
  .content-header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
  }
  
  .view-options {
    display: flex;
    gap: 5px;
  }
  
  .view-option {
    display: flex;
    align-items: center;
    gap: 5px;
    background-color: var(--bg-medium);
    border: 1px solid var(--border-color);
    color: var(--text-light);
    padding: 5px 10px;
    cursor: pointer;
  }
  
  .view-option.active {
    background-color: var(--primary-color);
    border-color: var(--primary-hover);
    color: #fff;
  }
  
  .filter-options {
    display: flex;
    gap: 10px;
  }
  
  .sort-filter, .search-input {
    background-color: var(--bg-medium);
    border: 1px solid var(--border-color);
    color: var(--text-light);
    padding: 5px 10px;
    font-size: 0.9rem;
  }
  
  /* Items Container */
  .items-container {
    margin-bottom: 30px;
  }
  
  .grid-view {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 20px;
  }
  
  .list-view {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }
  
  .list-view .collection-item {
    display: flex;
    align-items: center;
  }
  
  .list-view .item-preview {
    width: 80px;
    height: 80px;
    margin-right: 15px;
  }
  
  .desktop-view {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
    gap: 20px;
  }
  
  .desktop-view .item-details {
    text-align: center;
  }
  
  .desktop-view .item-creator {
    display: none;
  }
  
  /* Collection Item */
  .collection-item {
    position: relative;
    background-color: var(--bg-medium);
    border: 1px solid var(--border-color);
    overflow: hidden;
    transition: all 0.3s ease;
  }
  
  .collection-item:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    border-color: var(--primary-color);
  }
  
  .item-preview {
    position: relative;
    overflow: hidden;
    aspect-ratio: 1 / 1;
  }
  
  .item-preview img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .collection-item:hover .item-preview img {
    transform: scale(1.05);
  }
  
  .item-category {
    position: absolute;
    top: 10px;
    right: 10px;
    background-color: rgba(26, 26, 46, 0.8);
    color: var(--secondary-color);
    padding: 3px 8px;
    font-size: 0.7rem;
    border-radius: 2px;
  }
  
  .remove-item-button {
    position: absolute;
    top: 10px;
    left: 10px;
    width: 24px;
    height: 24px;
    background-color: rgba(0, 0, 0, 0.7);
    color: #fff;
    border: none;
    border-radius: 50%;
    font-size: 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    opacity: 0;
    transition: opacity 0.2s ease;
  }
  
  .item-preview:hover .remove-item-button {
    opacity: 1;
  }
  
  .item-details {
    padding: 15px;
  }
  
  .item-details h3 {
    margin: 0 0 10px 0;
    font-size: 1rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }
  
  .item-details h3 a {
    color: #fff;
    text-decoration: none;
  }
  
  .item-creator {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
    font-size: 0.8rem;
  }
  
  .item-creator a {
    display: flex;
    align-items: center;
    color: var(--text-muted);
    text-decoration: none;
  }
  
  .item-price {
    font-size: 0.9rem;
  }
  
  .wir-price {
    color: var(--secondary-color);
    font-weight: bold;
  }
  
  /* Empty Collection */
  .empty-collection {
    text-align: center;
    padding: 50px 20px;
    background-color: var(--bg-medium);
    border: 1px solid var(--border-color);
  }
  
  .empty-icon {
    font-size: 3rem;
    margin-bottom: 20px;
    color: var(--text-muted);
  }
  
  .empty-collection h2 {
    margin: 0 0 10px 0;
    color: #fff;
  }
  
  .empty-collection p {
    margin: 0 0 20px 0;
    color: var(--text-muted);
  }
  
  /* Action Buttons */
  .action-button {
    background-color: var(--bg-medium);
    border: 1px solid var(--border-color);
    color: var(--text-light);
    padding: 8px 15px;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .action-button:hover {
    background-color: var(--bg-light);
  }
  
  .edit-button {
    background-color: var(--bg-medium);
    color: var(--primary-color);
    border-color: var(--primary-color);
  }
  
  .edit-button:hover {
    background-color: var(--primary-color);
    color: #fff;
  }
  
  .add-button {
    background-color: var(--primary-color);
    border-color: var(--primary-hover);
    color: #fff;
  }
  
  .add-button:hover {
    background-color: var(--primary-hover);
  }
  
  .follow-button {
    background-color: var(--bg-medium);
    color: var(--secondary-color);
    border-color: var(--secondary-color);
  }
  
  .follow-button:hover {
    background-color: var(--secondary-color);
    color: var(--bg-dark);
  }
  
  .follow-button.following {
    background-color: var(--secondary-color);
    color: var(--bg-dark);
  }
  
  .share-button {
    background-color: var(--bg-medium);
    color: var(--text-light);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // View options
    const viewOptions = document.querySelectorAll('.view-option');
    const itemsContainer = document.querySelector('.items-container');
    
    viewOptions.forEach(option => {
      option.addEventListener('click', function() {
        const view = this.getAttribute('data-view');
        
        // Update active button
        viewOptions.forEach(opt => opt.classList.remove('active'));
        this.classList.add('active');
        
        // Update view class
        itemsContainer.className = `items-container ${view}-view`;
      });
    });
    
    // Sort filter
    const sortFilter = document.getElementById('sort-filter');
    if (sortFilter) {
      sortFilter.addEventListener('change', function() {
        const sort = this.value;
        const items = Array.from(document.querySelectorAll('.collection-item'));
        
        if (sort === 'custom') {
          // Do nothing, keep original order
          return;
        }
        
        items.sort((a, b) => {
          if (sort === 'newest' || sort === 'oldest') {
            const dateA = new Date(a.getAttribute('data-date'));
            const dateB = new Date(b.getAttribute('data-date'));
            
            return sort === 'newest' ? dateB - dateA : dateA - dateB;
          } else {
            const priceA = parseFloat(a.getAttribute('data-price'));
            const priceB = parseFloat(b.getAttribute('data-price'));
            
            return sort === 'price_low' ? priceA - priceB : priceB - priceA;
          }
        });
        
        // Clear the container and append sorted items
        const container = document.querySelector('.items-container');
        container.innerHTML = '';
        items.forEach(item => {
          container.appendChild(item);
        });
      });
    }
    
    // Search functionality
    const searchInput = document.getElementById('search-input');
    if (searchInput) {
      searchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const items = document.querySelectorAll('.collection-item');
        
        items.forEach(item => {
          const title = item.getAttribute('data-title').toLowerCase();
          const category = item.getAttribute('data-category').toLowerCase();
          
          if (title.includes(searchTerm) || category.includes(searchTerm)) {
            item.style.display = '';
          } else {
            item.style.display = 'none';
          }
        });
      });
    }
  });
</script>